version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: bcal_postgres_dev
    environment:
      POSTGRES_DB: bcal_db
      POSTGRES_USER: bcal_user
      POSTGRES_PASSWORD: bcal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bcal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bcal_user -d bcal_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bcal_backend_dev
    environment:
      - DATABASE_URL=postgresql://bcal_user:bcal_password@postgres:5432/bcal_db
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bcal_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bcal_frontend_dev
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PORT=3000
    ports:
      - "3000:3000"
    # Temporarily removing volume mount to test
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bcal_network
    stdin_open: true
    tty: true

volumes:
  postgres_data:

networks:
  bcal_network:
    driver: bridge
